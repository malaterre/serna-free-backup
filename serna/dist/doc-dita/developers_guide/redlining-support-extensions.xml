<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" []>
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="redlining-support-extensions">
  <title>Redlining Support Extensions</title>
  <body>
    <section>
      <p>Redlining support extensions provide stylesheet authors with the ability to know whether the content was redlined (marked), and allows to fetch the annotation text. This functionality is provided with <codeph>xse:redline(&apos;request-type&apos;, context-node?)</codeph> extension function. Request types may be as follows:</p>
      <ul>
        <li>
          <b>type</b>
          <p>Returns the current annotation type: <codeph>inserted</codeph>, <codeph>removed</codeph>, or <codeph>marked</codeph>. Function will return empty string if content is not redlined or marked.</p>
        </li>
        <li>
          <b>annotation</b>
          <p>Returns current redlining annotation string, if any.</p>
        </li>
      </ul>
      <p>The second parameter may be used to redefine the function context node, which is equal to the current XSLT context by default. The following example will render the redline annotation in-place when <codeph>annotation</codeph> element is encountered:</p>
      <codeblock>&lt;xsl:template match=&quot;annotation&quot;&gt;

  &lt;xsl:value-of select=&quot;xse:redline(&apos;annotation&apos;)&quot;/&gt;

&lt;/xsl:template&gt;

</codeblock>
      <p>Serna also allows to redefine the decorations of redlined content, which are generated by built-in template which produces <codeph>se:section</codeph> extension FO.  By default these decorations are shown as square brackets. Users can define named templates <codeph>serna.redline.start.template</codeph> and <codeph>serna.redline.end.template</codeph>  so they will be called instead of built-in templates.</p>
      <p>Default built-in redline decoration templates are defined as follows:</p>
      <p>

                <codeblock>&lt;xsl:template name=&quot;serna.redline.start.template&quot;&gt;

  &lt;se:section type=&quot;redline&quot; kind=&quot;start&quot;/&gt;

&lt;/xsl:template&gt;



&lt;xsl:template name=&quot;serna.redline.end.template&quot;&gt;

  &lt;se:section type=&quot;redline&quot; kind=&quot;end&quot;/&gt;

&lt;/xsl:template&gt;</codeblock>

              </p>
    </section>
  </body>
</topic>
